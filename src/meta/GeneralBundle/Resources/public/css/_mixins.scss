/* ******************************************************************** */
/*                             CUSTOM MIXINS                            */
/* ******************************************************************** */

@mixin logo($size){
  // find power of 2 closest
  $ratio: 0.75;
  //$img-size: pow(2, ceil(logarithm($size)/logarithm(2)));
  $img-size: em($size*$ratio);
  font-size: 1em;
  & > img {
    vertical-align: top;
    width: #{$img-size};
    height: #{$img-size};
    display: inline-block;
    margin-right: #{$img-size*(1 - $ratio)};
  }
  & > span {
    font-size: em($size);
    line-height: $ratio*1em;
    letter-spacing: -0.05em;
    color: $_text-dark;
    font-family: 'gotham_medium', 'Arial', sans-serif;
  }
}

@mixin ellipsis($size){
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  -o-text-overflow: ellipsis;
  -moz-binding: url(<q>assets/xml/ellipsis.xml#ellipsis</q>);
  max-width: $size;
  &:focus { text-overflow: initial;}
}

@mixin count-badge($size, $side, $side-offset, $top-offset) {
  position: absolute;
  #{$side}: $side-offset;
  top: $top-offset;
  padding: 0;
  min-width: $size;
  height: $size;
  border-radius: $size;
  font-size: 0.65em;
  line-height: 1.7em;
  text-align: center;
  text-shadow: none;
  text-shadow: none;
  background-color: $_primary;
  color: $_text-dark;
}

@mixin up-triangle($size, $color, $side){
  &:before {
    content: "";
    display: block;
    position: absolute;
    top: -$size;
    @if $side == center {
      left: 50%;
    } @else {
      #{$side}: 15px;
    }

    @include triangle($size, $color, up); // Thanks to the Bourbon Add-on
  }
  position: relative;
}

@mixin emboss-box($color_top, $color_bottom){
  box-shadow: 0px 1px 0px $color_top inset, 0px 1px 0px $color_bottom;
}

@mixin emboss-text($color){
  @if lightness($color) > lightness(#888888) {
    text-shadow: 0 -1px 0 darken($color, 90%);
  } @else {
    text-shadow: 0 1px 0 lighten($color, 20%);
  }
}

@mixin stripped-background($color) {
  background-size: 10px 10px;
  @include linear-gradient(135deg, rgba(255, 255, 255, .2) 25%, transparent 25%,
            transparent 50%, rgba(255, 255, 255, .2) 50%, rgba(255, 255, 255, .2) 75%,
            transparent 75%, transparent);
  background-color: $color;
}

@mixin button() {
  background-color: $_primary;
  color: $_text-dark;
  padding: 0.5em;
  min-width: 100px;
  display: inline-block;
  border: none;
  text-align: center;
  margin-bottom: 2px;
  &:hover { box-shadow: 0 0 0px 3px rgba(0,0,0,0.15) inset; }
  &:active { box-shadow: 0 0 0px 3px rgba(0,0,0,0.30) inset; }
  &:focus { box-shadow: 0 0 0px 3px rgba(0,0,0,0.30) inset; }
  &.button-neutral { background-color: $_muted !important; }
  &.button-danger { background-color: $_red !important; }
  &.button-info { background-color: $_blue !important; }
  &.button-success { background-color: $_green !important; }
}

@mixin tokens() {
  list-style: none;
  margin: 0; 
  padding: 0;
  font-size: 0.9em;
  display: inline-block;
  color: $_text;

  & > li {
    line-height: 1em;
    display: inline-block;
    padding: 3px 4px;
    margin: 2px;
    border-radius: $border-radius;
    border: 1px solid $_muted;
    position: relative;
    & a {
      color: $_muted;
      display: inline-block;
      &:hover { color: $_text; }
    }
    & em {
      display: inline-block;
      padding-left: 4px;
    }
    & > span > input { 
      width: initial; 
      border: none;
      padding: 0; 
      margin-left: 4px;
    }
  }
}

@mixin thumbs($width, $total, $flavour){
  $pad: $gutter*$width/4;
  $inner_size: ($column*$width/2 - $pad*2);
  margin: 0;
  padding: 0;
  list-style-type: none;
  & > li {
    display: inline-block;
    padding: $pad;
    margin-bottom: $pad;
    position: relative;
    height: $inner_size;
    @if $flavour == 'dark' {
      background: $_sensible-dark;
    } @else {
      background: $_sensible;
    }

    @include span-columns($width of $total);
    &:nth-child(#{floor($total/$width)}n) { @include omega; }
    @include media($tablet) {
      @include span-columns(2 of 4);
      &:nth-child(2n) { @include omega; }
    }
    @include media($mobile) {
      @include fill-parent();
    }
    
    & > a {
      @if $flavour == 'dark' {
        color: $_text-dark;
      } @else {
        color: $_text;
      }
      display: block;
      & > img {
        border-radius: 50%;
        height: ($inner_size - $pad*2);
        width: ($inner_size - $pad*2);
        vertical-align: top;
        float: left;
      }
      & > i {
        display: inline-block;
        float: left;
        font-size: 1.375em*ceil($width);
        @if $flavour == 'dark' {
          color: $_muted;
        } @else {
          color: $_text;
        }
      }
      & > div {
        display: table-cell;
        height: ($inner_size - $pad*2);
        vertical-align: middle;
        font-size: 1.2em;
        padding-left: $pad;
        & * {
          @include ellipsis($inner_size + $pad*2);
          max-height: ($inner_size - $pad*2);
          @include media($tablet, $mobile) {
            width: auto;
            max-width: none;
            padding-left: 10px;
          }
        }
        div:only-child {
          white-space: normal;
        }
        @include media($tablet, $mobile) {
          display: block;
          padding-top: 8px;
        }
      }
      &.remove {
        position: absolute;
        right: 10px;
        top: 0;
        font-size: 2em;
        line-height: $inner_size;
        &:hover { color: $_secondary; }
      }
    }
    &:hover{
      @if $flavour == 'dark' {
        background: $_text-secondary;
      } @else {
        background: $_muted;
      }
    }
  }
}
