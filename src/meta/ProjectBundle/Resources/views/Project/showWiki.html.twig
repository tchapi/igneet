{% extends 'metaProjectBundle:Project:show.html.twig' %}

{% block title %}{{ parent() }}{% if wikiPage %} | {{ "project.wiki.title"|trans }} : {{ wikiPage.title }}{% endif %}{% endblock %}

{% if wikiPage %}
  {% set shortcode %}[[wikipage:{{ wikiPage.id|to_uid }}]]{% endset %}
{% else %}
  {% set shortcode %}[[project:{{ base.project.id|to_uid }}]]{% endset %}
{% endif %}

{% block navbar %}
{% render(controller("metaProjectBundle:Base:navbar", { 'activeMenu' : 'wiki', 'uid' : base.project.id|to_uid, 'canEdit' : base.isOwning })) %}
{% endblock %}

{% block javascripts %}
  {{ parent() }}
  {% javascripts '@metaGeneralBundle/Resources/public/js-edit/jquery-nestable.js'
                 '@metaGeneralBundle/Resources/public/js-edit/nestable.behaviour.js'
          filter='?yui_js' %}
  <script src="{{ asset_url }}"></script>
  {% endjavascripts %}
  {% if base.canEdit %}
    {% javascripts '@metaGeneralBundle/Resources/public/js-edit/redactor.js'
            filter='?yui_js' %}
    <script src="{{ asset_url }}"></script>
    {% endjavascripts %}
  {% endif %}
{% endblock %}

{% block content %}

{% macro tree(wikipages, wikiPage, base, homePage) %}
  {% spaceless %}
    {% for page in wikipages %}
        <li class="{% if page.id == wikiPage.id %}active {% endif %}dd-item{% if not base.canEdit %} dd-nodrag{% endif %}" id="{{ page.id|to_uid }}" data-name="parent" data-url="{{ path('p_show_project_wiki_edit_page', {'uid': base.project.id|to_uid, 'page_uid': page.id|to_uid, 'token': csrf_token('editWikiPage') }) }}">
          {# Name of page #}
          <a href="{{ path('p_show_project_wiki_show_page', {'uid': base.project.id|to_uid, 'page_uid': page.id|to_uid }) }}" title="{{ page.title }}" class="page_title">{{ page.title }}</a>
          {# Handle for drag and drop, and home page #}
          {% if base.canEdit %}
            <div class="actions">
              {% if page != homePage %}<a title="{{ "project.wiki.make.home"|trans }}" href="{{ path('p_show_project_wiki_make_home_page', {'uid': base.project.id|to_uid, 'page_uid': page.id|to_uid, 'token': csrf_token('makeHomeWikiPage') }) }}"><i class="fa fa-home"></i></a>{% else %}<i class="fa fa-home muted"></i>{% endif %}
              <a title="{{ "delete"|trans }}" class="remove" data-title="{{ "project.wiki.deleteHelp"|trans }}" data-url="{{ path('p_show_project_wiki_delete_page', {'uid': base.project.id|to_uid, 'page_uid': page.id|to_uid, 'token': csrf_token('deleteWikiPage') }) }}">&times;</a>
            </div>
            <div class="dd-handle"><i class="fa fa-bars"></i></div>
          {% elseif page == homePage %}
            <i class="fa fa-home"></i>
          {% endif %}
          {# Sub lists #}
          {% if page.children|length > 0 %}
          <ul class="dd-list" data-value="{{ page.id|to_uid }}">
              {{ _self.tree(page.children, wikiPage, base, homePage) }}
          </ul>
          {% endif %}
        </li>
    {% endfor %}
  {% endspaceless %}
{% endmacro %}
{% import _self as macros %}

{# Title & Content & tags #}
<div class="wrapper info">
   
  <section>

    {# Tree of pages #}
    <div class="tree menu dd{% if app.request.cookies.get('igneet_trees_open').wiki == 'true' %} open{% endif %}" data-trees="wiki">
        <span>{{ "project.wiki.pages"|trans }}</span>
        <a href="#" class="toggle" title="{{ "project.wiki.open"|trans }}"><i class="fa fa-angle-double-left"></i></a>
        {% if base.canEdit %}
          <a href="#" data-url="{{ path('p_show_project_wiki_new_page', {'uid': base.project.id|to_uid, 'token': csrf_token('newWikiPage')}) }}" data-title="{{ "project.wiki.newHelp"|trans }}" title="{{ "project.wiki.new.page"|trans }}" class="new">+</a>
        {% endif %}
        <ul class="sortable dd-list" data-value="0" data-url="{{ path('p_show_project_wiki_rank', {'uid': base.project.id|to_uid}) }}">
          {{ macros.tree(wikiPages, wikiPage, base, homePage) }}
        </ul>
    </div>

    <div class="label-title"><span{% if base.canEdit %} data-name="title" data-url="{{ path('p_show_project_wiki_edit_page', {'uid': base.project.id|to_uid, 'page_uid': wikiPage.id|to_uid, 'token': csrf_token('editWikiPage') }) }}" contenteditable="true" rich="false"{% endif %}>{{ wikiPage.title }}</span></div>

    {# TAGS #}
    <div class="label-tags">
      {% if wikiPage.tags|length > 0 %}
        {% spaceless %}
        <ul{% if base.canEdit %} data-url="{{ path('p_show_project_wiki_edit_page', {'uid': base.project.id|to_uid, 'page_uid': wikiPage.id|to_uid, 'token': csrf_token('editWikiPage')  }) }}" contenteditable="list" data-name="tags"{% endif %}>
        {% for tag in wikiPage.tags %}
          <li {% if tag.color %}style="border: 1px solid #{{ tag.color }}" {% endif %}rel="{{ tag.name }}">
          {% if base.canEdit %}
            <a href="#" class="remove"><i class="fa fa-times"></i></a>  
          {% endif %}
          {{ tag.name }}</li>
        {% endfor %}
        {% if base.canEdit %}
          <li><a href="#" class="add"><i class="fa fa-plus"></i></a>
            <span style="display: none;">
              <a href="#"><i class="fa fa-times"></i></a>
              <input type="text" id="tag" placeholder="{{ "tags.emptyText"|trans }}"/>
            </span>
          </li>
        {% endif %}
        </ul>
        {% endspaceless %}
      {% else %}
        <span>{{ "tags.none"|trans }}</span>
        {% if base.canEdit %}
          <ul data-url="{{ path('p_show_project_wiki_edit_page', {'uid': base.project.id|to_uid, 'page_uid': wikiPage.id|to_uid, 'token': csrf_token('editWikiPage')  }) }}" contenteditable="list" data-name="tags">
            <li><a href="#" class="add"><i class="fa fa-plus"></i></a>
              <span style="display: none;">
                <a href="#"><i class="fa fa-times"></i></a>
                <input type="text" id="tag" placeholder="{{ "tags.emptyText"|trans }}"/>
              </span>
            </li>
          </ul>
        {% endif %}
      {% endif %}
    </div>

    <div class="content-wiki">
      <div{% if base.canEdit %} data-name="content" data-url="{{ path('p_show_project_wiki_edit_page', {'uid': base.project.id|to_uid, 'page_uid': wikiPage.id|to_uid, 'token': csrf_token('editWikiPage') }) }}" contenteditable="true" rich="full"{% else %} class="redactor_editor"{% endif %}>{{ wikiPage.content|deeplinks|markdown|raw }}</div>
    </div>
  </section>
  
</div>

{# Comments section #}
<div class="wrapper comment">
  <section>
    {% render(controller("metaProjectBundle:Comment:addWikiPageComment", { 'uid' : base.project.id|to_uid, 'page_uid': wikiPage.id|to_uid })) %}
  </section>
</div>
{% endblock %}
